[metadata]
description-file = README.md
[metadata]
name = "omuliga-matrix"
version = 0.0.1
author = Olivia Nabbosa
author_email = olivia.nabbosa@outlook.com
description = "Matrix Operations"
long_description = file: README.md
long_description_content_type = markdown
url = https://github.com/OliviaNabbosa89/my_pypi_upload
project_urls =
    Bug Tracker = https://github.com/OliviaNabbosa89/my_pypi_upload/issues
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent

class TestMatrixOperations(unittest.TestCase):

    def test_matrixaddition(self):
        C = self.assertEqual(self.MatrixOperations.matrix_addition(A, B), \
                             print('Left add (Matrix-Matrix):'),
                             print(C))

    def test_matrixaddition(self):
        C = self.assertEqual(self.MatrixOperations.matrix_addition(A, 10.0), \
                             print('Left add (Scaler-Matrix):'),
                             print(C))

    def test_right_matrix_addition(self):
        C = self.assertEqual(self.MatrixOperations.right_matrix_addition(20.0, A), \
                             print('Right add (Scaler-Matrix):'),
                             print(C))

    def test_matrix_multiplication(self):
        C = self.assertEqual(self.MatrixOperations.matrix_multiplication(A, B), \
                             print('Standard multiplication (Matrix-Matrix):'),
                             print(C))

    def test_matrix_multiplication(self):
        C = self.assertEqual(self.MatrixOperations.matrix_multiplication(A, 0.5), \
                             print('Standard multiplication (Matrix-scalar):'),
                             print(C))

    def test_right_matrix_multiplication(self):
        C = self.assertEqual(self.MatrixOperations.right_matrix_multiplication(A, B), \
                             print('Point-wise (Matrix-Matrix):'),
                             print(C))

    def test_right_matrix_multiplication(self):
        C = self.assertEqual(self.MatrixOperations.right_matrix_multiplication(0.5, A), \
                             print('Right point-wise multiplication (Matrix-scalar):'),
                             print(C))

    def test_two_matrix_multiplication(self):
        C = self.assertEqual(self.MatrixOperations.two_matrix_multiplication(A, B), \
                             print('Product Matrix (Matrix-Matrix):'),
                             print(C))


if __name__ == '__main__':
    unittest.main()